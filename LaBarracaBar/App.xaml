<Application x:Class="LaBarracaBar.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:notifications="clr-namespace:Notifications.Wpf;assembly=Notifications.Wpf"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:local="clr-namespace:LaBarracaBar"
             Startup="ApplicationStart">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Styles/UIColors.xaml"/>
                <ResourceDictionary Source="/Resources/Styles/ButtonStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="menuItemButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontFamily" Value="Montserrat"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                        CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#444"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- 🎨 Template para notificaciones -->
            <DataTemplate DataType="{x:Type notifications:NotificationContent}">
                <Border CornerRadius="10"
                        Padding="12"
                        Margin="5"
                        Background="#1E1E1E"
                        BorderBrush="#FF4F00"
                        BorderThickness="2">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <!-- Ícono dinámico -->
                        <fa:IconImage x:Name="Icon"
                                      Width="22" Height="22"
                                      Margin="0,0,10,0"
                                      VerticalAlignment="Center"/>

                        <!-- Texto -->
                        <StackPanel>
                            <TextBlock Text="{Binding Title}"
                                       Foreground="White"
                                       FontFamily="Montserrat"
                                       FontWeight="Bold"
                                       FontSize="14"/>
                            <TextBlock Text="{Binding Message}"
                                       Foreground="White"
                                       FontFamily="Montserrat"
                                       FontSize="12"
                                       TextWrapping="Wrap"/>
                        </StackPanel>
                    </StackPanel>
                </Border>

                <!-- 🎯 Cambios automáticos según NotificationType -->
                <DataTemplate.Triggers>
                    <!-- ✅ Éxito -->
                    <DataTrigger Binding="{Binding Type}" Value="Success">
                        <Setter TargetName="Icon" Property="Icon" Value="CheckCircle"/>
                        <Setter TargetName="Icon" Property="Foreground" Value="LimeGreen"/>
                    </DataTrigger>

                    <!-- ⚠ Advertencia -->
                    <DataTrigger Binding="{Binding Type}" Value="Warning">
                        <Setter TargetName="Icon" Property="Icon" Value="ExclamationTriangle"/>
                        <Setter TargetName="Icon" Property="Foreground" Value="Orange"/>
                    </DataTrigger>

                    <!-- ❌ Error -->
                    <DataTrigger Binding="{Binding Type}" Value="Error">
                        <Setter TargetName="Icon" Property="Icon" Value="TimesCircle"/>
                        <Setter TargetName="Icon" Property="Foreground" Value="Red"/>
                    </DataTrigger>

                    <!-- ℹ Información -->
                    <DataTrigger Binding="{Binding Type}" Value="Info">
                        <Setter TargetName="Icon" Property="Icon" Value="InfoCircle"/>
                        <Setter TargetName="Icon" Property="Foreground" Value="DodgerBlue"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <DropShadowEffect x:Key="DropShadow"
                      Color="Black"
                      BlurRadius="10"
                      Opacity="0.3"
                      ShadowDepth="2"/>

            <!-- Estilo general para botones redondeados -->
            <Style x:Key="ButtonNotificationGreen" TargetType="Button">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#28a745"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                            CornerRadius="8"
                            Padding="6">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ButtonNotificationRed" TargetType="Button">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#dc3545"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="8"
                                    Padding="6">
                                <ContentPresenter HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
